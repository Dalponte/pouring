# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Client {
  createdAt: DateTime!
  deletedAt: DateTime
  id: ID!
  meta: JSON!
  name: String!
  updatedAt: DateTime!
}

input CreateClientInput {
  meta: JSON
  name: String!
}

input CreateTagInput {
  code: String!
  meta: JSON
  reference: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Dispense {
  createdAt: DateTime!
  id: ID!
  meta: JSON!
  tap: Tap
  tapId: String
  type: String!
  updatedAt: DateTime!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  createClient(createClientInput: CreateClientInput!): Client!
  createDispense(meta: JSON!, tapId: String, type: String!): Dispense!
  createTag(createTagInput: CreateTagInput!): Tag!
  createTap(meta: JSON, name: String!): Tap!
  deleteClient(id: String!): Client!
  deleteTag(id: Int!): Tag!
  hardDeleteTap(id: String!): Tap!
  restoreTap(id: String!): Tap!
  softDeleteTap(id: String!): Tap!
  updateClient(id: String!, updateClientInput: UpdateClientInput!): Client!
  updateTag(id: Int!, updateTagInput: UpdateTagInput!): Tag!
  updateTap(id: String!, meta: JSON, name: String): Tap!
}

type Query {
  getClient(id: String!): Client
  getClients(includeDeleted: Boolean): [Client!]!
  getDispense(id: Float!): Dispense!
  getDispenses: [Dispense!]!
  getTag(id: Int!): Tag
  getTags: [Tag!]!
  getTap(id: String!, includeDeleted: Boolean): Tap!
  getTaps(includeDeleted: Boolean): [Tap!]!
}

type Subscription {
  dispenseAdded: Dispense!
  tapAdded: Tap!
  tapUpdated: Tap!
}

type Tag {
  code: String!
  createdAt: DateTime!
  deletedAt: DateTime
  id: Int!
  meta: JSON!
  reference: String!
  updatedAt: DateTime!
}

type Tap {
  createdAt: DateTime!
  deleted: Boolean!
  dispenses: [Dispense!]
  id: ID!
  meta: JSON!
  name: String!
  updatedAt: DateTime!
}

input UpdateClientInput {
  meta: JSON
  name: String
}

input UpdateTagInput {
  code: String
  description: String
  meta: JSON
  name: String
  reference: String
}